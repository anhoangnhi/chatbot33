const { GoogleSpreadsheet } = require('google-spreadsheet');

const SHEET_ID = process.env.SHEET_ID;
const CLIENT_EMAIL = process.env.GOOGLE_CLIENT_EMAIL;
const PRIVATE_KEY = process.env.GOOGLE_PRIVATE_KEY.replace(/\\n/g, '\n');

async function getQnAResponse(userInput) {
  console.log('[GS] B·∫Øt ƒë·∫ßu x·ª≠ l√Ω truy v·∫•n Google Sheet...');

  const doc = new GoogleSpreadsheet(SHEET_ID);
  console.log('[GS] T·∫°o doc th√†nh c√¥ng');

  try {
    console.log('[GS] ƒêang x√°c th·ª±c v·ªõi t√†i kho·∫£n d·ªãch v·ª•...');
    await doc.useServiceAccountAuth({
      client_email: CLIENT_EMAIL,
      private_key: PRIVATE_KEY
    });

    console.log('[GS] ƒê√£ x√°c th·ª±c, ƒëang load d·ªØ li·ªáu...');
    await doc.loadInfo();

    const sheet = doc.sheetsByIndex[0];
    const rows = await sheet.getRows();
    console.log(`[GS] ƒê·ªçc ${rows.length} d√≤ng t·ª´ Sheet`);

    const matched = rows.find((row) => {
      const keyword = row['C√¢u h·ªèi']?.toLowerCase().trim();
      return keyword && userInput.toLowerCase().includes(keyword);
    });

    return matched ? matched['Tr·∫£ l·ªùi m·∫´u'] : 'ü§ñ Xin l·ªói, t√¥i ch∆∞a c√≥ c√¢u tr·∫£ l·ªùi ph√π h·ª£p.';
  } catch (error) {
    console.error('[GS ‚ùå] L·ªói x√°c th·ª±c ho·∫∑c x·ª≠ l√Ω:', error);
    throw new Error('L·ªói x√°c th·ª±c Google Sheet');
  }
}

module.exports = { getQnAResponse };
